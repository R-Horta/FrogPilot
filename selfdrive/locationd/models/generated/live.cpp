#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8105684203409443664) {
   out_8105684203409443664[0] = 0;
   out_8105684203409443664[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8105684203409443664[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8105684203409443664[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8105684203409443664[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8105684203409443664[5] = -sin(in_vec[1]);
   out_8105684203409443664[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8105684203409443664[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8105684203409443664[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8105684203409443664[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8105684203409443664[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8105684203409443664[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8105684203409443664[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8105684203409443664[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8105684203409443664[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8105684203409443664[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8105684203409443664[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8105684203409443664[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6009694460892224080) {
   out_6009694460892224080[0] = delta_x[0] + nom_x[0];
   out_6009694460892224080[1] = delta_x[1] + nom_x[1];
   out_6009694460892224080[2] = delta_x[2] + nom_x[2];
   out_6009694460892224080[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6009694460892224080[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6009694460892224080[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6009694460892224080[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6009694460892224080[7] = delta_x[6] + nom_x[7];
   out_6009694460892224080[8] = delta_x[7] + nom_x[8];
   out_6009694460892224080[9] = delta_x[8] + nom_x[9];
   out_6009694460892224080[10] = delta_x[9] + nom_x[10];
   out_6009694460892224080[11] = delta_x[10] + nom_x[11];
   out_6009694460892224080[12] = delta_x[11] + nom_x[12];
   out_6009694460892224080[13] = delta_x[12] + nom_x[13];
   out_6009694460892224080[14] = delta_x[13] + nom_x[14];
   out_6009694460892224080[15] = delta_x[14] + nom_x[15];
   out_6009694460892224080[16] = delta_x[15] + nom_x[16];
   out_6009694460892224080[17] = delta_x[16] + nom_x[17];
   out_6009694460892224080[18] = delta_x[17] + nom_x[18];
   out_6009694460892224080[19] = delta_x[18] + nom_x[19];
   out_6009694460892224080[20] = delta_x[19] + nom_x[20];
   out_6009694460892224080[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_4500169231886375311) {
   out_4500169231886375311[0] = -nom_x[0] + true_x[0];
   out_4500169231886375311[1] = -nom_x[1] + true_x[1];
   out_4500169231886375311[2] = -nom_x[2] + true_x[2];
   out_4500169231886375311[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_4500169231886375311[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_4500169231886375311[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_4500169231886375311[6] = -nom_x[7] + true_x[7];
   out_4500169231886375311[7] = -nom_x[8] + true_x[8];
   out_4500169231886375311[8] = -nom_x[9] + true_x[9];
   out_4500169231886375311[9] = -nom_x[10] + true_x[10];
   out_4500169231886375311[10] = -nom_x[11] + true_x[11];
   out_4500169231886375311[11] = -nom_x[12] + true_x[12];
   out_4500169231886375311[12] = -nom_x[13] + true_x[13];
   out_4500169231886375311[13] = -nom_x[14] + true_x[14];
   out_4500169231886375311[14] = -nom_x[15] + true_x[15];
   out_4500169231886375311[15] = -nom_x[16] + true_x[16];
   out_4500169231886375311[16] = -nom_x[17] + true_x[17];
   out_4500169231886375311[17] = -nom_x[18] + true_x[18];
   out_4500169231886375311[18] = -nom_x[19] + true_x[19];
   out_4500169231886375311[19] = -nom_x[20] + true_x[20];
   out_4500169231886375311[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_4718470999003226183) {
   out_4718470999003226183[0] = 1.0;
   out_4718470999003226183[1] = 0;
   out_4718470999003226183[2] = 0;
   out_4718470999003226183[3] = 0;
   out_4718470999003226183[4] = 0;
   out_4718470999003226183[5] = 0;
   out_4718470999003226183[6] = 0;
   out_4718470999003226183[7] = 0;
   out_4718470999003226183[8] = 0;
   out_4718470999003226183[9] = 0;
   out_4718470999003226183[10] = 0;
   out_4718470999003226183[11] = 0;
   out_4718470999003226183[12] = 0;
   out_4718470999003226183[13] = 0;
   out_4718470999003226183[14] = 0;
   out_4718470999003226183[15] = 0;
   out_4718470999003226183[16] = 0;
   out_4718470999003226183[17] = 0;
   out_4718470999003226183[18] = 0;
   out_4718470999003226183[19] = 0;
   out_4718470999003226183[20] = 0;
   out_4718470999003226183[21] = 0;
   out_4718470999003226183[22] = 1.0;
   out_4718470999003226183[23] = 0;
   out_4718470999003226183[24] = 0;
   out_4718470999003226183[25] = 0;
   out_4718470999003226183[26] = 0;
   out_4718470999003226183[27] = 0;
   out_4718470999003226183[28] = 0;
   out_4718470999003226183[29] = 0;
   out_4718470999003226183[30] = 0;
   out_4718470999003226183[31] = 0;
   out_4718470999003226183[32] = 0;
   out_4718470999003226183[33] = 0;
   out_4718470999003226183[34] = 0;
   out_4718470999003226183[35] = 0;
   out_4718470999003226183[36] = 0;
   out_4718470999003226183[37] = 0;
   out_4718470999003226183[38] = 0;
   out_4718470999003226183[39] = 0;
   out_4718470999003226183[40] = 0;
   out_4718470999003226183[41] = 0;
   out_4718470999003226183[42] = 0;
   out_4718470999003226183[43] = 0;
   out_4718470999003226183[44] = 1.0;
   out_4718470999003226183[45] = 0;
   out_4718470999003226183[46] = 0;
   out_4718470999003226183[47] = 0;
   out_4718470999003226183[48] = 0;
   out_4718470999003226183[49] = 0;
   out_4718470999003226183[50] = 0;
   out_4718470999003226183[51] = 0;
   out_4718470999003226183[52] = 0;
   out_4718470999003226183[53] = 0;
   out_4718470999003226183[54] = 0;
   out_4718470999003226183[55] = 0;
   out_4718470999003226183[56] = 0;
   out_4718470999003226183[57] = 0;
   out_4718470999003226183[58] = 0;
   out_4718470999003226183[59] = 0;
   out_4718470999003226183[60] = 0;
   out_4718470999003226183[61] = 0;
   out_4718470999003226183[62] = 0;
   out_4718470999003226183[63] = 0;
   out_4718470999003226183[64] = 0;
   out_4718470999003226183[65] = 0;
   out_4718470999003226183[66] = -0.5*state[4];
   out_4718470999003226183[67] = -0.5*state[5];
   out_4718470999003226183[68] = -0.5*state[6];
   out_4718470999003226183[69] = 0;
   out_4718470999003226183[70] = 0;
   out_4718470999003226183[71] = 0;
   out_4718470999003226183[72] = 0;
   out_4718470999003226183[73] = 0;
   out_4718470999003226183[74] = 0;
   out_4718470999003226183[75] = 0;
   out_4718470999003226183[76] = 0;
   out_4718470999003226183[77] = 0;
   out_4718470999003226183[78] = 0;
   out_4718470999003226183[79] = 0;
   out_4718470999003226183[80] = 0;
   out_4718470999003226183[81] = 0;
   out_4718470999003226183[82] = 0;
   out_4718470999003226183[83] = 0;
   out_4718470999003226183[84] = 0;
   out_4718470999003226183[85] = 0;
   out_4718470999003226183[86] = 0;
   out_4718470999003226183[87] = 0.5*state[3];
   out_4718470999003226183[88] = 0.5*state[6];
   out_4718470999003226183[89] = -0.5*state[5];
   out_4718470999003226183[90] = 0;
   out_4718470999003226183[91] = 0;
   out_4718470999003226183[92] = 0;
   out_4718470999003226183[93] = 0;
   out_4718470999003226183[94] = 0;
   out_4718470999003226183[95] = 0;
   out_4718470999003226183[96] = 0;
   out_4718470999003226183[97] = 0;
   out_4718470999003226183[98] = 0;
   out_4718470999003226183[99] = 0;
   out_4718470999003226183[100] = 0;
   out_4718470999003226183[101] = 0;
   out_4718470999003226183[102] = 0;
   out_4718470999003226183[103] = 0;
   out_4718470999003226183[104] = 0;
   out_4718470999003226183[105] = 0;
   out_4718470999003226183[106] = 0;
   out_4718470999003226183[107] = 0;
   out_4718470999003226183[108] = -0.5*state[6];
   out_4718470999003226183[109] = 0.5*state[3];
   out_4718470999003226183[110] = 0.5*state[4];
   out_4718470999003226183[111] = 0;
   out_4718470999003226183[112] = 0;
   out_4718470999003226183[113] = 0;
   out_4718470999003226183[114] = 0;
   out_4718470999003226183[115] = 0;
   out_4718470999003226183[116] = 0;
   out_4718470999003226183[117] = 0;
   out_4718470999003226183[118] = 0;
   out_4718470999003226183[119] = 0;
   out_4718470999003226183[120] = 0;
   out_4718470999003226183[121] = 0;
   out_4718470999003226183[122] = 0;
   out_4718470999003226183[123] = 0;
   out_4718470999003226183[124] = 0;
   out_4718470999003226183[125] = 0;
   out_4718470999003226183[126] = 0;
   out_4718470999003226183[127] = 0;
   out_4718470999003226183[128] = 0;
   out_4718470999003226183[129] = 0.5*state[5];
   out_4718470999003226183[130] = -0.5*state[4];
   out_4718470999003226183[131] = 0.5*state[3];
   out_4718470999003226183[132] = 0;
   out_4718470999003226183[133] = 0;
   out_4718470999003226183[134] = 0;
   out_4718470999003226183[135] = 0;
   out_4718470999003226183[136] = 0;
   out_4718470999003226183[137] = 0;
   out_4718470999003226183[138] = 0;
   out_4718470999003226183[139] = 0;
   out_4718470999003226183[140] = 0;
   out_4718470999003226183[141] = 0;
   out_4718470999003226183[142] = 0;
   out_4718470999003226183[143] = 0;
   out_4718470999003226183[144] = 0;
   out_4718470999003226183[145] = 0;
   out_4718470999003226183[146] = 0;
   out_4718470999003226183[147] = 0;
   out_4718470999003226183[148] = 0;
   out_4718470999003226183[149] = 0;
   out_4718470999003226183[150] = 0;
   out_4718470999003226183[151] = 0;
   out_4718470999003226183[152] = 0;
   out_4718470999003226183[153] = 1.0;
   out_4718470999003226183[154] = 0;
   out_4718470999003226183[155] = 0;
   out_4718470999003226183[156] = 0;
   out_4718470999003226183[157] = 0;
   out_4718470999003226183[158] = 0;
   out_4718470999003226183[159] = 0;
   out_4718470999003226183[160] = 0;
   out_4718470999003226183[161] = 0;
   out_4718470999003226183[162] = 0;
   out_4718470999003226183[163] = 0;
   out_4718470999003226183[164] = 0;
   out_4718470999003226183[165] = 0;
   out_4718470999003226183[166] = 0;
   out_4718470999003226183[167] = 0;
   out_4718470999003226183[168] = 0;
   out_4718470999003226183[169] = 0;
   out_4718470999003226183[170] = 0;
   out_4718470999003226183[171] = 0;
   out_4718470999003226183[172] = 0;
   out_4718470999003226183[173] = 0;
   out_4718470999003226183[174] = 0;
   out_4718470999003226183[175] = 1.0;
   out_4718470999003226183[176] = 0;
   out_4718470999003226183[177] = 0;
   out_4718470999003226183[178] = 0;
   out_4718470999003226183[179] = 0;
   out_4718470999003226183[180] = 0;
   out_4718470999003226183[181] = 0;
   out_4718470999003226183[182] = 0;
   out_4718470999003226183[183] = 0;
   out_4718470999003226183[184] = 0;
   out_4718470999003226183[185] = 0;
   out_4718470999003226183[186] = 0;
   out_4718470999003226183[187] = 0;
   out_4718470999003226183[188] = 0;
   out_4718470999003226183[189] = 0;
   out_4718470999003226183[190] = 0;
   out_4718470999003226183[191] = 0;
   out_4718470999003226183[192] = 0;
   out_4718470999003226183[193] = 0;
   out_4718470999003226183[194] = 0;
   out_4718470999003226183[195] = 0;
   out_4718470999003226183[196] = 0;
   out_4718470999003226183[197] = 1.0;
   out_4718470999003226183[198] = 0;
   out_4718470999003226183[199] = 0;
   out_4718470999003226183[200] = 0;
   out_4718470999003226183[201] = 0;
   out_4718470999003226183[202] = 0;
   out_4718470999003226183[203] = 0;
   out_4718470999003226183[204] = 0;
   out_4718470999003226183[205] = 0;
   out_4718470999003226183[206] = 0;
   out_4718470999003226183[207] = 0;
   out_4718470999003226183[208] = 0;
   out_4718470999003226183[209] = 0;
   out_4718470999003226183[210] = 0;
   out_4718470999003226183[211] = 0;
   out_4718470999003226183[212] = 0;
   out_4718470999003226183[213] = 0;
   out_4718470999003226183[214] = 0;
   out_4718470999003226183[215] = 0;
   out_4718470999003226183[216] = 0;
   out_4718470999003226183[217] = 0;
   out_4718470999003226183[218] = 0;
   out_4718470999003226183[219] = 1.0;
   out_4718470999003226183[220] = 0;
   out_4718470999003226183[221] = 0;
   out_4718470999003226183[222] = 0;
   out_4718470999003226183[223] = 0;
   out_4718470999003226183[224] = 0;
   out_4718470999003226183[225] = 0;
   out_4718470999003226183[226] = 0;
   out_4718470999003226183[227] = 0;
   out_4718470999003226183[228] = 0;
   out_4718470999003226183[229] = 0;
   out_4718470999003226183[230] = 0;
   out_4718470999003226183[231] = 0;
   out_4718470999003226183[232] = 0;
   out_4718470999003226183[233] = 0;
   out_4718470999003226183[234] = 0;
   out_4718470999003226183[235] = 0;
   out_4718470999003226183[236] = 0;
   out_4718470999003226183[237] = 0;
   out_4718470999003226183[238] = 0;
   out_4718470999003226183[239] = 0;
   out_4718470999003226183[240] = 0;
   out_4718470999003226183[241] = 1.0;
   out_4718470999003226183[242] = 0;
   out_4718470999003226183[243] = 0;
   out_4718470999003226183[244] = 0;
   out_4718470999003226183[245] = 0;
   out_4718470999003226183[246] = 0;
   out_4718470999003226183[247] = 0;
   out_4718470999003226183[248] = 0;
   out_4718470999003226183[249] = 0;
   out_4718470999003226183[250] = 0;
   out_4718470999003226183[251] = 0;
   out_4718470999003226183[252] = 0;
   out_4718470999003226183[253] = 0;
   out_4718470999003226183[254] = 0;
   out_4718470999003226183[255] = 0;
   out_4718470999003226183[256] = 0;
   out_4718470999003226183[257] = 0;
   out_4718470999003226183[258] = 0;
   out_4718470999003226183[259] = 0;
   out_4718470999003226183[260] = 0;
   out_4718470999003226183[261] = 0;
   out_4718470999003226183[262] = 0;
   out_4718470999003226183[263] = 1.0;
   out_4718470999003226183[264] = 0;
   out_4718470999003226183[265] = 0;
   out_4718470999003226183[266] = 0;
   out_4718470999003226183[267] = 0;
   out_4718470999003226183[268] = 0;
   out_4718470999003226183[269] = 0;
   out_4718470999003226183[270] = 0;
   out_4718470999003226183[271] = 0;
   out_4718470999003226183[272] = 0;
   out_4718470999003226183[273] = 0;
   out_4718470999003226183[274] = 0;
   out_4718470999003226183[275] = 0;
   out_4718470999003226183[276] = 0;
   out_4718470999003226183[277] = 0;
   out_4718470999003226183[278] = 0;
   out_4718470999003226183[279] = 0;
   out_4718470999003226183[280] = 0;
   out_4718470999003226183[281] = 0;
   out_4718470999003226183[282] = 0;
   out_4718470999003226183[283] = 0;
   out_4718470999003226183[284] = 0;
   out_4718470999003226183[285] = 1.0;
   out_4718470999003226183[286] = 0;
   out_4718470999003226183[287] = 0;
   out_4718470999003226183[288] = 0;
   out_4718470999003226183[289] = 0;
   out_4718470999003226183[290] = 0;
   out_4718470999003226183[291] = 0;
   out_4718470999003226183[292] = 0;
   out_4718470999003226183[293] = 0;
   out_4718470999003226183[294] = 0;
   out_4718470999003226183[295] = 0;
   out_4718470999003226183[296] = 0;
   out_4718470999003226183[297] = 0;
   out_4718470999003226183[298] = 0;
   out_4718470999003226183[299] = 0;
   out_4718470999003226183[300] = 0;
   out_4718470999003226183[301] = 0;
   out_4718470999003226183[302] = 0;
   out_4718470999003226183[303] = 0;
   out_4718470999003226183[304] = 0;
   out_4718470999003226183[305] = 0;
   out_4718470999003226183[306] = 0;
   out_4718470999003226183[307] = 1.0;
   out_4718470999003226183[308] = 0;
   out_4718470999003226183[309] = 0;
   out_4718470999003226183[310] = 0;
   out_4718470999003226183[311] = 0;
   out_4718470999003226183[312] = 0;
   out_4718470999003226183[313] = 0;
   out_4718470999003226183[314] = 0;
   out_4718470999003226183[315] = 0;
   out_4718470999003226183[316] = 0;
   out_4718470999003226183[317] = 0;
   out_4718470999003226183[318] = 0;
   out_4718470999003226183[319] = 0;
   out_4718470999003226183[320] = 0;
   out_4718470999003226183[321] = 0;
   out_4718470999003226183[322] = 0;
   out_4718470999003226183[323] = 0;
   out_4718470999003226183[324] = 0;
   out_4718470999003226183[325] = 0;
   out_4718470999003226183[326] = 0;
   out_4718470999003226183[327] = 0;
   out_4718470999003226183[328] = 0;
   out_4718470999003226183[329] = 1.0;
   out_4718470999003226183[330] = 0;
   out_4718470999003226183[331] = 0;
   out_4718470999003226183[332] = 0;
   out_4718470999003226183[333] = 0;
   out_4718470999003226183[334] = 0;
   out_4718470999003226183[335] = 0;
   out_4718470999003226183[336] = 0;
   out_4718470999003226183[337] = 0;
   out_4718470999003226183[338] = 0;
   out_4718470999003226183[339] = 0;
   out_4718470999003226183[340] = 0;
   out_4718470999003226183[341] = 0;
   out_4718470999003226183[342] = 0;
   out_4718470999003226183[343] = 0;
   out_4718470999003226183[344] = 0;
   out_4718470999003226183[345] = 0;
   out_4718470999003226183[346] = 0;
   out_4718470999003226183[347] = 0;
   out_4718470999003226183[348] = 0;
   out_4718470999003226183[349] = 0;
   out_4718470999003226183[350] = 0;
   out_4718470999003226183[351] = 1.0;
   out_4718470999003226183[352] = 0;
   out_4718470999003226183[353] = 0;
   out_4718470999003226183[354] = 0;
   out_4718470999003226183[355] = 0;
   out_4718470999003226183[356] = 0;
   out_4718470999003226183[357] = 0;
   out_4718470999003226183[358] = 0;
   out_4718470999003226183[359] = 0;
   out_4718470999003226183[360] = 0;
   out_4718470999003226183[361] = 0;
   out_4718470999003226183[362] = 0;
   out_4718470999003226183[363] = 0;
   out_4718470999003226183[364] = 0;
   out_4718470999003226183[365] = 0;
   out_4718470999003226183[366] = 0;
   out_4718470999003226183[367] = 0;
   out_4718470999003226183[368] = 0;
   out_4718470999003226183[369] = 0;
   out_4718470999003226183[370] = 0;
   out_4718470999003226183[371] = 0;
   out_4718470999003226183[372] = 0;
   out_4718470999003226183[373] = 1.0;
   out_4718470999003226183[374] = 0;
   out_4718470999003226183[375] = 0;
   out_4718470999003226183[376] = 0;
   out_4718470999003226183[377] = 0;
   out_4718470999003226183[378] = 0;
   out_4718470999003226183[379] = 0;
   out_4718470999003226183[380] = 0;
   out_4718470999003226183[381] = 0;
   out_4718470999003226183[382] = 0;
   out_4718470999003226183[383] = 0;
   out_4718470999003226183[384] = 0;
   out_4718470999003226183[385] = 0;
   out_4718470999003226183[386] = 0;
   out_4718470999003226183[387] = 0;
   out_4718470999003226183[388] = 0;
   out_4718470999003226183[389] = 0;
   out_4718470999003226183[390] = 0;
   out_4718470999003226183[391] = 0;
   out_4718470999003226183[392] = 0;
   out_4718470999003226183[393] = 0;
   out_4718470999003226183[394] = 0;
   out_4718470999003226183[395] = 1.0;
   out_4718470999003226183[396] = 0;
   out_4718470999003226183[397] = 0;
   out_4718470999003226183[398] = 0;
   out_4718470999003226183[399] = 0;
   out_4718470999003226183[400] = 0;
   out_4718470999003226183[401] = 0;
   out_4718470999003226183[402] = 0;
   out_4718470999003226183[403] = 0;
   out_4718470999003226183[404] = 0;
   out_4718470999003226183[405] = 0;
   out_4718470999003226183[406] = 0;
   out_4718470999003226183[407] = 0;
   out_4718470999003226183[408] = 0;
   out_4718470999003226183[409] = 0;
   out_4718470999003226183[410] = 0;
   out_4718470999003226183[411] = 0;
   out_4718470999003226183[412] = 0;
   out_4718470999003226183[413] = 0;
   out_4718470999003226183[414] = 0;
   out_4718470999003226183[415] = 0;
   out_4718470999003226183[416] = 0;
   out_4718470999003226183[417] = 1.0;
   out_4718470999003226183[418] = 0;
   out_4718470999003226183[419] = 0;
   out_4718470999003226183[420] = 0;
   out_4718470999003226183[421] = 0;
   out_4718470999003226183[422] = 0;
   out_4718470999003226183[423] = 0;
   out_4718470999003226183[424] = 0;
   out_4718470999003226183[425] = 0;
   out_4718470999003226183[426] = 0;
   out_4718470999003226183[427] = 0;
   out_4718470999003226183[428] = 0;
   out_4718470999003226183[429] = 0;
   out_4718470999003226183[430] = 0;
   out_4718470999003226183[431] = 0;
   out_4718470999003226183[432] = 0;
   out_4718470999003226183[433] = 0;
   out_4718470999003226183[434] = 0;
   out_4718470999003226183[435] = 0;
   out_4718470999003226183[436] = 0;
   out_4718470999003226183[437] = 0;
   out_4718470999003226183[438] = 0;
   out_4718470999003226183[439] = 1.0;
   out_4718470999003226183[440] = 0;
   out_4718470999003226183[441] = 0;
   out_4718470999003226183[442] = 0;
   out_4718470999003226183[443] = 0;
   out_4718470999003226183[444] = 0;
   out_4718470999003226183[445] = 0;
   out_4718470999003226183[446] = 0;
   out_4718470999003226183[447] = 0;
   out_4718470999003226183[448] = 0;
   out_4718470999003226183[449] = 0;
   out_4718470999003226183[450] = 0;
   out_4718470999003226183[451] = 0;
   out_4718470999003226183[452] = 0;
   out_4718470999003226183[453] = 0;
   out_4718470999003226183[454] = 0;
   out_4718470999003226183[455] = 0;
   out_4718470999003226183[456] = 0;
   out_4718470999003226183[457] = 0;
   out_4718470999003226183[458] = 0;
   out_4718470999003226183[459] = 0;
   out_4718470999003226183[460] = 0;
   out_4718470999003226183[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_6731141136618477668) {
   out_6731141136618477668[0] = dt*state[7] + state[0];
   out_6731141136618477668[1] = dt*state[8] + state[1];
   out_6731141136618477668[2] = dt*state[9] + state[2];
   out_6731141136618477668[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_6731141136618477668[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_6731141136618477668[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_6731141136618477668[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_6731141136618477668[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_6731141136618477668[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_6731141136618477668[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_6731141136618477668[10] = state[10];
   out_6731141136618477668[11] = state[11];
   out_6731141136618477668[12] = state[12];
   out_6731141136618477668[13] = state[13];
   out_6731141136618477668[14] = state[14];
   out_6731141136618477668[15] = state[15];
   out_6731141136618477668[16] = state[16];
   out_6731141136618477668[17] = state[17];
   out_6731141136618477668[18] = state[18];
   out_6731141136618477668[19] = state[19];
   out_6731141136618477668[20] = state[20];
   out_6731141136618477668[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4629760113683050) {
   out_4629760113683050[0] = 1;
   out_4629760113683050[1] = 0;
   out_4629760113683050[2] = 0;
   out_4629760113683050[3] = 0;
   out_4629760113683050[4] = 0;
   out_4629760113683050[5] = 0;
   out_4629760113683050[6] = dt;
   out_4629760113683050[7] = 0;
   out_4629760113683050[8] = 0;
   out_4629760113683050[9] = 0;
   out_4629760113683050[10] = 0;
   out_4629760113683050[11] = 0;
   out_4629760113683050[12] = 0;
   out_4629760113683050[13] = 0;
   out_4629760113683050[14] = 0;
   out_4629760113683050[15] = 0;
   out_4629760113683050[16] = 0;
   out_4629760113683050[17] = 0;
   out_4629760113683050[18] = 0;
   out_4629760113683050[19] = 0;
   out_4629760113683050[20] = 0;
   out_4629760113683050[21] = 0;
   out_4629760113683050[22] = 1;
   out_4629760113683050[23] = 0;
   out_4629760113683050[24] = 0;
   out_4629760113683050[25] = 0;
   out_4629760113683050[26] = 0;
   out_4629760113683050[27] = 0;
   out_4629760113683050[28] = dt;
   out_4629760113683050[29] = 0;
   out_4629760113683050[30] = 0;
   out_4629760113683050[31] = 0;
   out_4629760113683050[32] = 0;
   out_4629760113683050[33] = 0;
   out_4629760113683050[34] = 0;
   out_4629760113683050[35] = 0;
   out_4629760113683050[36] = 0;
   out_4629760113683050[37] = 0;
   out_4629760113683050[38] = 0;
   out_4629760113683050[39] = 0;
   out_4629760113683050[40] = 0;
   out_4629760113683050[41] = 0;
   out_4629760113683050[42] = 0;
   out_4629760113683050[43] = 0;
   out_4629760113683050[44] = 1;
   out_4629760113683050[45] = 0;
   out_4629760113683050[46] = 0;
   out_4629760113683050[47] = 0;
   out_4629760113683050[48] = 0;
   out_4629760113683050[49] = 0;
   out_4629760113683050[50] = dt;
   out_4629760113683050[51] = 0;
   out_4629760113683050[52] = 0;
   out_4629760113683050[53] = 0;
   out_4629760113683050[54] = 0;
   out_4629760113683050[55] = 0;
   out_4629760113683050[56] = 0;
   out_4629760113683050[57] = 0;
   out_4629760113683050[58] = 0;
   out_4629760113683050[59] = 0;
   out_4629760113683050[60] = 0;
   out_4629760113683050[61] = 0;
   out_4629760113683050[62] = 0;
   out_4629760113683050[63] = 0;
   out_4629760113683050[64] = 0;
   out_4629760113683050[65] = 0;
   out_4629760113683050[66] = 1;
   out_4629760113683050[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4629760113683050[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4629760113683050[69] = 0;
   out_4629760113683050[70] = 0;
   out_4629760113683050[71] = 0;
   out_4629760113683050[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4629760113683050[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4629760113683050[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4629760113683050[75] = 0;
   out_4629760113683050[76] = 0;
   out_4629760113683050[77] = 0;
   out_4629760113683050[78] = 0;
   out_4629760113683050[79] = 0;
   out_4629760113683050[80] = 0;
   out_4629760113683050[81] = 0;
   out_4629760113683050[82] = 0;
   out_4629760113683050[83] = 0;
   out_4629760113683050[84] = 0;
   out_4629760113683050[85] = 0;
   out_4629760113683050[86] = 0;
   out_4629760113683050[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4629760113683050[88] = 1;
   out_4629760113683050[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4629760113683050[90] = 0;
   out_4629760113683050[91] = 0;
   out_4629760113683050[92] = 0;
   out_4629760113683050[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4629760113683050[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4629760113683050[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4629760113683050[96] = 0;
   out_4629760113683050[97] = 0;
   out_4629760113683050[98] = 0;
   out_4629760113683050[99] = 0;
   out_4629760113683050[100] = 0;
   out_4629760113683050[101] = 0;
   out_4629760113683050[102] = 0;
   out_4629760113683050[103] = 0;
   out_4629760113683050[104] = 0;
   out_4629760113683050[105] = 0;
   out_4629760113683050[106] = 0;
   out_4629760113683050[107] = 0;
   out_4629760113683050[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4629760113683050[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4629760113683050[110] = 1;
   out_4629760113683050[111] = 0;
   out_4629760113683050[112] = 0;
   out_4629760113683050[113] = 0;
   out_4629760113683050[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4629760113683050[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4629760113683050[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4629760113683050[117] = 0;
   out_4629760113683050[118] = 0;
   out_4629760113683050[119] = 0;
   out_4629760113683050[120] = 0;
   out_4629760113683050[121] = 0;
   out_4629760113683050[122] = 0;
   out_4629760113683050[123] = 0;
   out_4629760113683050[124] = 0;
   out_4629760113683050[125] = 0;
   out_4629760113683050[126] = 0;
   out_4629760113683050[127] = 0;
   out_4629760113683050[128] = 0;
   out_4629760113683050[129] = 0;
   out_4629760113683050[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4629760113683050[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4629760113683050[132] = 1;
   out_4629760113683050[133] = 0;
   out_4629760113683050[134] = 0;
   out_4629760113683050[135] = 0;
   out_4629760113683050[136] = 0;
   out_4629760113683050[137] = 0;
   out_4629760113683050[138] = 0;
   out_4629760113683050[139] = 0;
   out_4629760113683050[140] = 0;
   out_4629760113683050[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4629760113683050[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4629760113683050[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4629760113683050[144] = 0;
   out_4629760113683050[145] = 0;
   out_4629760113683050[146] = 0;
   out_4629760113683050[147] = 0;
   out_4629760113683050[148] = 0;
   out_4629760113683050[149] = 0;
   out_4629760113683050[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4629760113683050[151] = 0;
   out_4629760113683050[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4629760113683050[153] = 0;
   out_4629760113683050[154] = 1;
   out_4629760113683050[155] = 0;
   out_4629760113683050[156] = 0;
   out_4629760113683050[157] = 0;
   out_4629760113683050[158] = 0;
   out_4629760113683050[159] = 0;
   out_4629760113683050[160] = 0;
   out_4629760113683050[161] = 0;
   out_4629760113683050[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4629760113683050[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4629760113683050[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4629760113683050[165] = 0;
   out_4629760113683050[166] = 0;
   out_4629760113683050[167] = 0;
   out_4629760113683050[168] = 0;
   out_4629760113683050[169] = 0;
   out_4629760113683050[170] = 0;
   out_4629760113683050[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4629760113683050[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4629760113683050[173] = 0;
   out_4629760113683050[174] = 0;
   out_4629760113683050[175] = 0;
   out_4629760113683050[176] = 1;
   out_4629760113683050[177] = 0;
   out_4629760113683050[178] = 0;
   out_4629760113683050[179] = 0;
   out_4629760113683050[180] = 0;
   out_4629760113683050[181] = 0;
   out_4629760113683050[182] = 0;
   out_4629760113683050[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4629760113683050[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4629760113683050[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4629760113683050[186] = 0;
   out_4629760113683050[187] = 0;
   out_4629760113683050[188] = 0;
   out_4629760113683050[189] = 0;
   out_4629760113683050[190] = 0;
   out_4629760113683050[191] = 0;
   out_4629760113683050[192] = 0;
   out_4629760113683050[193] = 0;
   out_4629760113683050[194] = 0;
   out_4629760113683050[195] = 0;
   out_4629760113683050[196] = 0;
   out_4629760113683050[197] = 0;
   out_4629760113683050[198] = 1;
   out_4629760113683050[199] = 0;
   out_4629760113683050[200] = 0;
   out_4629760113683050[201] = 0;
   out_4629760113683050[202] = 0;
   out_4629760113683050[203] = 0;
   out_4629760113683050[204] = 0;
   out_4629760113683050[205] = 0;
   out_4629760113683050[206] = 0;
   out_4629760113683050[207] = 0;
   out_4629760113683050[208] = 0;
   out_4629760113683050[209] = 0;
   out_4629760113683050[210] = 0;
   out_4629760113683050[211] = 0;
   out_4629760113683050[212] = 0;
   out_4629760113683050[213] = 0;
   out_4629760113683050[214] = 0;
   out_4629760113683050[215] = 0;
   out_4629760113683050[216] = 0;
   out_4629760113683050[217] = 0;
   out_4629760113683050[218] = 0;
   out_4629760113683050[219] = 0;
   out_4629760113683050[220] = 1;
   out_4629760113683050[221] = 0;
   out_4629760113683050[222] = 0;
   out_4629760113683050[223] = 0;
   out_4629760113683050[224] = 0;
   out_4629760113683050[225] = 0;
   out_4629760113683050[226] = 0;
   out_4629760113683050[227] = 0;
   out_4629760113683050[228] = 0;
   out_4629760113683050[229] = 0;
   out_4629760113683050[230] = 0;
   out_4629760113683050[231] = 0;
   out_4629760113683050[232] = 0;
   out_4629760113683050[233] = 0;
   out_4629760113683050[234] = 0;
   out_4629760113683050[235] = 0;
   out_4629760113683050[236] = 0;
   out_4629760113683050[237] = 0;
   out_4629760113683050[238] = 0;
   out_4629760113683050[239] = 0;
   out_4629760113683050[240] = 0;
   out_4629760113683050[241] = 0;
   out_4629760113683050[242] = 1;
   out_4629760113683050[243] = 0;
   out_4629760113683050[244] = 0;
   out_4629760113683050[245] = 0;
   out_4629760113683050[246] = 0;
   out_4629760113683050[247] = 0;
   out_4629760113683050[248] = 0;
   out_4629760113683050[249] = 0;
   out_4629760113683050[250] = 0;
   out_4629760113683050[251] = 0;
   out_4629760113683050[252] = 0;
   out_4629760113683050[253] = 0;
   out_4629760113683050[254] = 0;
   out_4629760113683050[255] = 0;
   out_4629760113683050[256] = 0;
   out_4629760113683050[257] = 0;
   out_4629760113683050[258] = 0;
   out_4629760113683050[259] = 0;
   out_4629760113683050[260] = 0;
   out_4629760113683050[261] = 0;
   out_4629760113683050[262] = 0;
   out_4629760113683050[263] = 0;
   out_4629760113683050[264] = 1;
   out_4629760113683050[265] = 0;
   out_4629760113683050[266] = 0;
   out_4629760113683050[267] = 0;
   out_4629760113683050[268] = 0;
   out_4629760113683050[269] = 0;
   out_4629760113683050[270] = 0;
   out_4629760113683050[271] = 0;
   out_4629760113683050[272] = 0;
   out_4629760113683050[273] = 0;
   out_4629760113683050[274] = 0;
   out_4629760113683050[275] = 0;
   out_4629760113683050[276] = 0;
   out_4629760113683050[277] = 0;
   out_4629760113683050[278] = 0;
   out_4629760113683050[279] = 0;
   out_4629760113683050[280] = 0;
   out_4629760113683050[281] = 0;
   out_4629760113683050[282] = 0;
   out_4629760113683050[283] = 0;
   out_4629760113683050[284] = 0;
   out_4629760113683050[285] = 0;
   out_4629760113683050[286] = 1;
   out_4629760113683050[287] = 0;
   out_4629760113683050[288] = 0;
   out_4629760113683050[289] = 0;
   out_4629760113683050[290] = 0;
   out_4629760113683050[291] = 0;
   out_4629760113683050[292] = 0;
   out_4629760113683050[293] = 0;
   out_4629760113683050[294] = 0;
   out_4629760113683050[295] = 0;
   out_4629760113683050[296] = 0;
   out_4629760113683050[297] = 0;
   out_4629760113683050[298] = 0;
   out_4629760113683050[299] = 0;
   out_4629760113683050[300] = 0;
   out_4629760113683050[301] = 0;
   out_4629760113683050[302] = 0;
   out_4629760113683050[303] = 0;
   out_4629760113683050[304] = 0;
   out_4629760113683050[305] = 0;
   out_4629760113683050[306] = 0;
   out_4629760113683050[307] = 0;
   out_4629760113683050[308] = 1;
   out_4629760113683050[309] = 0;
   out_4629760113683050[310] = 0;
   out_4629760113683050[311] = 0;
   out_4629760113683050[312] = 0;
   out_4629760113683050[313] = 0;
   out_4629760113683050[314] = 0;
   out_4629760113683050[315] = 0;
   out_4629760113683050[316] = 0;
   out_4629760113683050[317] = 0;
   out_4629760113683050[318] = 0;
   out_4629760113683050[319] = 0;
   out_4629760113683050[320] = 0;
   out_4629760113683050[321] = 0;
   out_4629760113683050[322] = 0;
   out_4629760113683050[323] = 0;
   out_4629760113683050[324] = 0;
   out_4629760113683050[325] = 0;
   out_4629760113683050[326] = 0;
   out_4629760113683050[327] = 0;
   out_4629760113683050[328] = 0;
   out_4629760113683050[329] = 0;
   out_4629760113683050[330] = 1;
   out_4629760113683050[331] = 0;
   out_4629760113683050[332] = 0;
   out_4629760113683050[333] = 0;
   out_4629760113683050[334] = 0;
   out_4629760113683050[335] = 0;
   out_4629760113683050[336] = 0;
   out_4629760113683050[337] = 0;
   out_4629760113683050[338] = 0;
   out_4629760113683050[339] = 0;
   out_4629760113683050[340] = 0;
   out_4629760113683050[341] = 0;
   out_4629760113683050[342] = 0;
   out_4629760113683050[343] = 0;
   out_4629760113683050[344] = 0;
   out_4629760113683050[345] = 0;
   out_4629760113683050[346] = 0;
   out_4629760113683050[347] = 0;
   out_4629760113683050[348] = 0;
   out_4629760113683050[349] = 0;
   out_4629760113683050[350] = 0;
   out_4629760113683050[351] = 0;
   out_4629760113683050[352] = 1;
   out_4629760113683050[353] = 0;
   out_4629760113683050[354] = 0;
   out_4629760113683050[355] = 0;
   out_4629760113683050[356] = 0;
   out_4629760113683050[357] = 0;
   out_4629760113683050[358] = 0;
   out_4629760113683050[359] = 0;
   out_4629760113683050[360] = 0;
   out_4629760113683050[361] = 0;
   out_4629760113683050[362] = 0;
   out_4629760113683050[363] = 0;
   out_4629760113683050[364] = 0;
   out_4629760113683050[365] = 0;
   out_4629760113683050[366] = 0;
   out_4629760113683050[367] = 0;
   out_4629760113683050[368] = 0;
   out_4629760113683050[369] = 0;
   out_4629760113683050[370] = 0;
   out_4629760113683050[371] = 0;
   out_4629760113683050[372] = 0;
   out_4629760113683050[373] = 0;
   out_4629760113683050[374] = 1;
   out_4629760113683050[375] = 0;
   out_4629760113683050[376] = 0;
   out_4629760113683050[377] = 0;
   out_4629760113683050[378] = 0;
   out_4629760113683050[379] = 0;
   out_4629760113683050[380] = 0;
   out_4629760113683050[381] = 0;
   out_4629760113683050[382] = 0;
   out_4629760113683050[383] = 0;
   out_4629760113683050[384] = 0;
   out_4629760113683050[385] = 0;
   out_4629760113683050[386] = 0;
   out_4629760113683050[387] = 0;
   out_4629760113683050[388] = 0;
   out_4629760113683050[389] = 0;
   out_4629760113683050[390] = 0;
   out_4629760113683050[391] = 0;
   out_4629760113683050[392] = 0;
   out_4629760113683050[393] = 0;
   out_4629760113683050[394] = 0;
   out_4629760113683050[395] = 0;
   out_4629760113683050[396] = 1;
   out_4629760113683050[397] = 0;
   out_4629760113683050[398] = 0;
   out_4629760113683050[399] = 0;
   out_4629760113683050[400] = 0;
   out_4629760113683050[401] = 0;
   out_4629760113683050[402] = 0;
   out_4629760113683050[403] = 0;
   out_4629760113683050[404] = 0;
   out_4629760113683050[405] = 0;
   out_4629760113683050[406] = 0;
   out_4629760113683050[407] = 0;
   out_4629760113683050[408] = 0;
   out_4629760113683050[409] = 0;
   out_4629760113683050[410] = 0;
   out_4629760113683050[411] = 0;
   out_4629760113683050[412] = 0;
   out_4629760113683050[413] = 0;
   out_4629760113683050[414] = 0;
   out_4629760113683050[415] = 0;
   out_4629760113683050[416] = 0;
   out_4629760113683050[417] = 0;
   out_4629760113683050[418] = 1;
   out_4629760113683050[419] = 0;
   out_4629760113683050[420] = 0;
   out_4629760113683050[421] = 0;
   out_4629760113683050[422] = 0;
   out_4629760113683050[423] = 0;
   out_4629760113683050[424] = 0;
   out_4629760113683050[425] = 0;
   out_4629760113683050[426] = 0;
   out_4629760113683050[427] = 0;
   out_4629760113683050[428] = 0;
   out_4629760113683050[429] = 0;
   out_4629760113683050[430] = 0;
   out_4629760113683050[431] = 0;
   out_4629760113683050[432] = 0;
   out_4629760113683050[433] = 0;
   out_4629760113683050[434] = 0;
   out_4629760113683050[435] = 0;
   out_4629760113683050[436] = 0;
   out_4629760113683050[437] = 0;
   out_4629760113683050[438] = 0;
   out_4629760113683050[439] = 0;
   out_4629760113683050[440] = 1;
}
void h_4(double *state, double *unused, double *out_8367410387765199065) {
   out_8367410387765199065[0] = state[10] + state[13];
   out_8367410387765199065[1] = state[11] + state[14];
   out_8367410387765199065[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8677453988394506375) {
   out_8677453988394506375[0] = 0;
   out_8677453988394506375[1] = 0;
   out_8677453988394506375[2] = 0;
   out_8677453988394506375[3] = 0;
   out_8677453988394506375[4] = 0;
   out_8677453988394506375[5] = 0;
   out_8677453988394506375[6] = 0;
   out_8677453988394506375[7] = 0;
   out_8677453988394506375[8] = 0;
   out_8677453988394506375[9] = 0;
   out_8677453988394506375[10] = 1;
   out_8677453988394506375[11] = 0;
   out_8677453988394506375[12] = 0;
   out_8677453988394506375[13] = 1;
   out_8677453988394506375[14] = 0;
   out_8677453988394506375[15] = 0;
   out_8677453988394506375[16] = 0;
   out_8677453988394506375[17] = 0;
   out_8677453988394506375[18] = 0;
   out_8677453988394506375[19] = 0;
   out_8677453988394506375[20] = 0;
   out_8677453988394506375[21] = 0;
   out_8677453988394506375[22] = 0;
   out_8677453988394506375[23] = 0;
   out_8677453988394506375[24] = 0;
   out_8677453988394506375[25] = 0;
   out_8677453988394506375[26] = 0;
   out_8677453988394506375[27] = 0;
   out_8677453988394506375[28] = 0;
   out_8677453988394506375[29] = 0;
   out_8677453988394506375[30] = 0;
   out_8677453988394506375[31] = 0;
   out_8677453988394506375[32] = 0;
   out_8677453988394506375[33] = 1;
   out_8677453988394506375[34] = 0;
   out_8677453988394506375[35] = 0;
   out_8677453988394506375[36] = 1;
   out_8677453988394506375[37] = 0;
   out_8677453988394506375[38] = 0;
   out_8677453988394506375[39] = 0;
   out_8677453988394506375[40] = 0;
   out_8677453988394506375[41] = 0;
   out_8677453988394506375[42] = 0;
   out_8677453988394506375[43] = 0;
   out_8677453988394506375[44] = 0;
   out_8677453988394506375[45] = 0;
   out_8677453988394506375[46] = 0;
   out_8677453988394506375[47] = 0;
   out_8677453988394506375[48] = 0;
   out_8677453988394506375[49] = 0;
   out_8677453988394506375[50] = 0;
   out_8677453988394506375[51] = 0;
   out_8677453988394506375[52] = 0;
   out_8677453988394506375[53] = 0;
   out_8677453988394506375[54] = 0;
   out_8677453988394506375[55] = 0;
   out_8677453988394506375[56] = 1;
   out_8677453988394506375[57] = 0;
   out_8677453988394506375[58] = 0;
   out_8677453988394506375[59] = 1;
   out_8677453988394506375[60] = 0;
   out_8677453988394506375[61] = 0;
   out_8677453988394506375[62] = 0;
   out_8677453988394506375[63] = 0;
   out_8677453988394506375[64] = 0;
   out_8677453988394506375[65] = 0;
}
void h_9(double *state, double *unused, double *out_6295069496057986254) {
   out_6295069496057986254[0] = state[10];
   out_6295069496057986254[1] = state[11];
   out_6295069496057986254[2] = state[12];
}
void H_9(double *state, double *unused, double *out_1390235053130058905) {
   out_1390235053130058905[0] = 0;
   out_1390235053130058905[1] = 0;
   out_1390235053130058905[2] = 0;
   out_1390235053130058905[3] = 0;
   out_1390235053130058905[4] = 0;
   out_1390235053130058905[5] = 0;
   out_1390235053130058905[6] = 0;
   out_1390235053130058905[7] = 0;
   out_1390235053130058905[8] = 0;
   out_1390235053130058905[9] = 0;
   out_1390235053130058905[10] = 1;
   out_1390235053130058905[11] = 0;
   out_1390235053130058905[12] = 0;
   out_1390235053130058905[13] = 0;
   out_1390235053130058905[14] = 0;
   out_1390235053130058905[15] = 0;
   out_1390235053130058905[16] = 0;
   out_1390235053130058905[17] = 0;
   out_1390235053130058905[18] = 0;
   out_1390235053130058905[19] = 0;
   out_1390235053130058905[20] = 0;
   out_1390235053130058905[21] = 0;
   out_1390235053130058905[22] = 0;
   out_1390235053130058905[23] = 0;
   out_1390235053130058905[24] = 0;
   out_1390235053130058905[25] = 0;
   out_1390235053130058905[26] = 0;
   out_1390235053130058905[27] = 0;
   out_1390235053130058905[28] = 0;
   out_1390235053130058905[29] = 0;
   out_1390235053130058905[30] = 0;
   out_1390235053130058905[31] = 0;
   out_1390235053130058905[32] = 0;
   out_1390235053130058905[33] = 1;
   out_1390235053130058905[34] = 0;
   out_1390235053130058905[35] = 0;
   out_1390235053130058905[36] = 0;
   out_1390235053130058905[37] = 0;
   out_1390235053130058905[38] = 0;
   out_1390235053130058905[39] = 0;
   out_1390235053130058905[40] = 0;
   out_1390235053130058905[41] = 0;
   out_1390235053130058905[42] = 0;
   out_1390235053130058905[43] = 0;
   out_1390235053130058905[44] = 0;
   out_1390235053130058905[45] = 0;
   out_1390235053130058905[46] = 0;
   out_1390235053130058905[47] = 0;
   out_1390235053130058905[48] = 0;
   out_1390235053130058905[49] = 0;
   out_1390235053130058905[50] = 0;
   out_1390235053130058905[51] = 0;
   out_1390235053130058905[52] = 0;
   out_1390235053130058905[53] = 0;
   out_1390235053130058905[54] = 0;
   out_1390235053130058905[55] = 0;
   out_1390235053130058905[56] = 1;
   out_1390235053130058905[57] = 0;
   out_1390235053130058905[58] = 0;
   out_1390235053130058905[59] = 0;
   out_1390235053130058905[60] = 0;
   out_1390235053130058905[61] = 0;
   out_1390235053130058905[62] = 0;
   out_1390235053130058905[63] = 0;
   out_1390235053130058905[64] = 0;
   out_1390235053130058905[65] = 0;
}
void h_10(double *state, double *unused, double *out_807403039949781792) {
   out_807403039949781792[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_807403039949781792[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_807403039949781792[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_5994600925781704636) {
   out_5994600925781704636[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_5994600925781704636[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5994600925781704636[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_5994600925781704636[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5994600925781704636[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5994600925781704636[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5994600925781704636[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5994600925781704636[7] = 0;
   out_5994600925781704636[8] = 0;
   out_5994600925781704636[9] = 0;
   out_5994600925781704636[10] = 0;
   out_5994600925781704636[11] = 0;
   out_5994600925781704636[12] = 0;
   out_5994600925781704636[13] = 0;
   out_5994600925781704636[14] = 0;
   out_5994600925781704636[15] = 0;
   out_5994600925781704636[16] = 1;
   out_5994600925781704636[17] = 0;
   out_5994600925781704636[18] = 0;
   out_5994600925781704636[19] = 1;
   out_5994600925781704636[20] = 0;
   out_5994600925781704636[21] = 0;
   out_5994600925781704636[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_5994600925781704636[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_5994600925781704636[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_5994600925781704636[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5994600925781704636[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5994600925781704636[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5994600925781704636[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5994600925781704636[29] = 0;
   out_5994600925781704636[30] = 0;
   out_5994600925781704636[31] = 0;
   out_5994600925781704636[32] = 0;
   out_5994600925781704636[33] = 0;
   out_5994600925781704636[34] = 0;
   out_5994600925781704636[35] = 0;
   out_5994600925781704636[36] = 0;
   out_5994600925781704636[37] = 0;
   out_5994600925781704636[38] = 0;
   out_5994600925781704636[39] = 1;
   out_5994600925781704636[40] = 0;
   out_5994600925781704636[41] = 0;
   out_5994600925781704636[42] = 1;
   out_5994600925781704636[43] = 0;
   out_5994600925781704636[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_5994600925781704636[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_5994600925781704636[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_5994600925781704636[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_5994600925781704636[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_5994600925781704636[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_5994600925781704636[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_5994600925781704636[51] = 0;
   out_5994600925781704636[52] = 0;
   out_5994600925781704636[53] = 0;
   out_5994600925781704636[54] = 0;
   out_5994600925781704636[55] = 0;
   out_5994600925781704636[56] = 0;
   out_5994600925781704636[57] = 0;
   out_5994600925781704636[58] = 0;
   out_5994600925781704636[59] = 0;
   out_5994600925781704636[60] = 0;
   out_5994600925781704636[61] = 0;
   out_5994600925781704636[62] = 1;
   out_5994600925781704636[63] = 0;
   out_5994600925781704636[64] = 0;
   out_5994600925781704636[65] = 1;
}
void h_12(double *state, double *unused, double *out_8835561720881619035) {
   out_8835561720881619035[0] = state[0];
   out_8835561720881619035[1] = state[1];
   out_8835561720881619035[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3388031708272312245) {
   out_3388031708272312245[0] = 1;
   out_3388031708272312245[1] = 0;
   out_3388031708272312245[2] = 0;
   out_3388031708272312245[3] = 0;
   out_3388031708272312245[4] = 0;
   out_3388031708272312245[5] = 0;
   out_3388031708272312245[6] = 0;
   out_3388031708272312245[7] = 0;
   out_3388031708272312245[8] = 0;
   out_3388031708272312245[9] = 0;
   out_3388031708272312245[10] = 0;
   out_3388031708272312245[11] = 0;
   out_3388031708272312245[12] = 0;
   out_3388031708272312245[13] = 0;
   out_3388031708272312245[14] = 0;
   out_3388031708272312245[15] = 0;
   out_3388031708272312245[16] = 0;
   out_3388031708272312245[17] = 0;
   out_3388031708272312245[18] = 0;
   out_3388031708272312245[19] = 0;
   out_3388031708272312245[20] = 0;
   out_3388031708272312245[21] = 0;
   out_3388031708272312245[22] = 0;
   out_3388031708272312245[23] = 1;
   out_3388031708272312245[24] = 0;
   out_3388031708272312245[25] = 0;
   out_3388031708272312245[26] = 0;
   out_3388031708272312245[27] = 0;
   out_3388031708272312245[28] = 0;
   out_3388031708272312245[29] = 0;
   out_3388031708272312245[30] = 0;
   out_3388031708272312245[31] = 0;
   out_3388031708272312245[32] = 0;
   out_3388031708272312245[33] = 0;
   out_3388031708272312245[34] = 0;
   out_3388031708272312245[35] = 0;
   out_3388031708272312245[36] = 0;
   out_3388031708272312245[37] = 0;
   out_3388031708272312245[38] = 0;
   out_3388031708272312245[39] = 0;
   out_3388031708272312245[40] = 0;
   out_3388031708272312245[41] = 0;
   out_3388031708272312245[42] = 0;
   out_3388031708272312245[43] = 0;
   out_3388031708272312245[44] = 0;
   out_3388031708272312245[45] = 0;
   out_3388031708272312245[46] = 1;
   out_3388031708272312245[47] = 0;
   out_3388031708272312245[48] = 0;
   out_3388031708272312245[49] = 0;
   out_3388031708272312245[50] = 0;
   out_3388031708272312245[51] = 0;
   out_3388031708272312245[52] = 0;
   out_3388031708272312245[53] = 0;
   out_3388031708272312245[54] = 0;
   out_3388031708272312245[55] = 0;
   out_3388031708272312245[56] = 0;
   out_3388031708272312245[57] = 0;
   out_3388031708272312245[58] = 0;
   out_3388031708272312245[59] = 0;
   out_3388031708272312245[60] = 0;
   out_3388031708272312245[61] = 0;
   out_3388031708272312245[62] = 0;
   out_3388031708272312245[63] = 0;
   out_3388031708272312245[64] = 0;
   out_3388031708272312245[65] = 0;
}
void h_35(double *state, double *unused, double *out_3586554408121291898) {
   out_3586554408121291898[0] = state[7];
   out_3586554408121291898[1] = state[8];
   out_3586554408121291898[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1735237357612957826) {
   out_1735237357612957826[0] = 0;
   out_1735237357612957826[1] = 0;
   out_1735237357612957826[2] = 0;
   out_1735237357612957826[3] = 0;
   out_1735237357612957826[4] = 0;
   out_1735237357612957826[5] = 0;
   out_1735237357612957826[6] = 0;
   out_1735237357612957826[7] = 1;
   out_1735237357612957826[8] = 0;
   out_1735237357612957826[9] = 0;
   out_1735237357612957826[10] = 0;
   out_1735237357612957826[11] = 0;
   out_1735237357612957826[12] = 0;
   out_1735237357612957826[13] = 0;
   out_1735237357612957826[14] = 0;
   out_1735237357612957826[15] = 0;
   out_1735237357612957826[16] = 0;
   out_1735237357612957826[17] = 0;
   out_1735237357612957826[18] = 0;
   out_1735237357612957826[19] = 0;
   out_1735237357612957826[20] = 0;
   out_1735237357612957826[21] = 0;
   out_1735237357612957826[22] = 0;
   out_1735237357612957826[23] = 0;
   out_1735237357612957826[24] = 0;
   out_1735237357612957826[25] = 0;
   out_1735237357612957826[26] = 0;
   out_1735237357612957826[27] = 0;
   out_1735237357612957826[28] = 0;
   out_1735237357612957826[29] = 0;
   out_1735237357612957826[30] = 1;
   out_1735237357612957826[31] = 0;
   out_1735237357612957826[32] = 0;
   out_1735237357612957826[33] = 0;
   out_1735237357612957826[34] = 0;
   out_1735237357612957826[35] = 0;
   out_1735237357612957826[36] = 0;
   out_1735237357612957826[37] = 0;
   out_1735237357612957826[38] = 0;
   out_1735237357612957826[39] = 0;
   out_1735237357612957826[40] = 0;
   out_1735237357612957826[41] = 0;
   out_1735237357612957826[42] = 0;
   out_1735237357612957826[43] = 0;
   out_1735237357612957826[44] = 0;
   out_1735237357612957826[45] = 0;
   out_1735237357612957826[46] = 0;
   out_1735237357612957826[47] = 0;
   out_1735237357612957826[48] = 0;
   out_1735237357612957826[49] = 0;
   out_1735237357612957826[50] = 0;
   out_1735237357612957826[51] = 0;
   out_1735237357612957826[52] = 0;
   out_1735237357612957826[53] = 1;
   out_1735237357612957826[54] = 0;
   out_1735237357612957826[55] = 0;
   out_1735237357612957826[56] = 0;
   out_1735237357612957826[57] = 0;
   out_1735237357612957826[58] = 0;
   out_1735237357612957826[59] = 0;
   out_1735237357612957826[60] = 0;
   out_1735237357612957826[61] = 0;
   out_1735237357612957826[62] = 0;
   out_1735237357612957826[63] = 0;
   out_1735237357612957826[64] = 0;
   out_1735237357612957826[65] = 0;
}
void h_32(double *state, double *unused, double *out_7732761396890248770) {
   out_7732761396890248770[0] = state[3];
   out_7732761396890248770[1] = state[4];
   out_7732761396890248770[2] = state[5];
   out_7732761396890248770[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8917252905015743547) {
   out_8917252905015743547[0] = 0;
   out_8917252905015743547[1] = 0;
   out_8917252905015743547[2] = 0;
   out_8917252905015743547[3] = 1;
   out_8917252905015743547[4] = 0;
   out_8917252905015743547[5] = 0;
   out_8917252905015743547[6] = 0;
   out_8917252905015743547[7] = 0;
   out_8917252905015743547[8] = 0;
   out_8917252905015743547[9] = 0;
   out_8917252905015743547[10] = 0;
   out_8917252905015743547[11] = 0;
   out_8917252905015743547[12] = 0;
   out_8917252905015743547[13] = 0;
   out_8917252905015743547[14] = 0;
   out_8917252905015743547[15] = 0;
   out_8917252905015743547[16] = 0;
   out_8917252905015743547[17] = 0;
   out_8917252905015743547[18] = 0;
   out_8917252905015743547[19] = 0;
   out_8917252905015743547[20] = 0;
   out_8917252905015743547[21] = 0;
   out_8917252905015743547[22] = 0;
   out_8917252905015743547[23] = 0;
   out_8917252905015743547[24] = 0;
   out_8917252905015743547[25] = 0;
   out_8917252905015743547[26] = 1;
   out_8917252905015743547[27] = 0;
   out_8917252905015743547[28] = 0;
   out_8917252905015743547[29] = 0;
   out_8917252905015743547[30] = 0;
   out_8917252905015743547[31] = 0;
   out_8917252905015743547[32] = 0;
   out_8917252905015743547[33] = 0;
   out_8917252905015743547[34] = 0;
   out_8917252905015743547[35] = 0;
   out_8917252905015743547[36] = 0;
   out_8917252905015743547[37] = 0;
   out_8917252905015743547[38] = 0;
   out_8917252905015743547[39] = 0;
   out_8917252905015743547[40] = 0;
   out_8917252905015743547[41] = 0;
   out_8917252905015743547[42] = 0;
   out_8917252905015743547[43] = 0;
   out_8917252905015743547[44] = 0;
   out_8917252905015743547[45] = 0;
   out_8917252905015743547[46] = 0;
   out_8917252905015743547[47] = 0;
   out_8917252905015743547[48] = 0;
   out_8917252905015743547[49] = 1;
   out_8917252905015743547[50] = 0;
   out_8917252905015743547[51] = 0;
   out_8917252905015743547[52] = 0;
   out_8917252905015743547[53] = 0;
   out_8917252905015743547[54] = 0;
   out_8917252905015743547[55] = 0;
   out_8917252905015743547[56] = 0;
   out_8917252905015743547[57] = 0;
   out_8917252905015743547[58] = 0;
   out_8917252905015743547[59] = 0;
   out_8917252905015743547[60] = 0;
   out_8917252905015743547[61] = 0;
   out_8917252905015743547[62] = 0;
   out_8917252905015743547[63] = 0;
   out_8917252905015743547[64] = 0;
   out_8917252905015743547[65] = 0;
   out_8917252905015743547[66] = 0;
   out_8917252905015743547[67] = 0;
   out_8917252905015743547[68] = 0;
   out_8917252905015743547[69] = 0;
   out_8917252905015743547[70] = 0;
   out_8917252905015743547[71] = 0;
   out_8917252905015743547[72] = 1;
   out_8917252905015743547[73] = 0;
   out_8917252905015743547[74] = 0;
   out_8917252905015743547[75] = 0;
   out_8917252905015743547[76] = 0;
   out_8917252905015743547[77] = 0;
   out_8917252905015743547[78] = 0;
   out_8917252905015743547[79] = 0;
   out_8917252905015743547[80] = 0;
   out_8917252905015743547[81] = 0;
   out_8917252905015743547[82] = 0;
   out_8917252905015743547[83] = 0;
   out_8917252905015743547[84] = 0;
   out_8917252905015743547[85] = 0;
   out_8917252905015743547[86] = 0;
   out_8917252905015743547[87] = 0;
}
void h_13(double *state, double *unused, double *out_5154368101625429584) {
   out_5154368101625429584[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5154368101625429584[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5154368101625429584[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2785015820751177915) {
   out_2785015820751177915[0] = 0;
   out_2785015820751177915[1] = 0;
   out_2785015820751177915[2] = 0;
   out_2785015820751177915[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2785015820751177915[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2785015820751177915[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2785015820751177915[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2785015820751177915[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2785015820751177915[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2785015820751177915[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2785015820751177915[10] = 0;
   out_2785015820751177915[11] = 0;
   out_2785015820751177915[12] = 0;
   out_2785015820751177915[13] = 0;
   out_2785015820751177915[14] = 0;
   out_2785015820751177915[15] = 0;
   out_2785015820751177915[16] = 0;
   out_2785015820751177915[17] = 0;
   out_2785015820751177915[18] = 0;
   out_2785015820751177915[19] = 0;
   out_2785015820751177915[20] = 0;
   out_2785015820751177915[21] = 0;
   out_2785015820751177915[22] = 0;
   out_2785015820751177915[23] = 0;
   out_2785015820751177915[24] = 0;
   out_2785015820751177915[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2785015820751177915[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2785015820751177915[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2785015820751177915[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2785015820751177915[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2785015820751177915[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2785015820751177915[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2785015820751177915[32] = 0;
   out_2785015820751177915[33] = 0;
   out_2785015820751177915[34] = 0;
   out_2785015820751177915[35] = 0;
   out_2785015820751177915[36] = 0;
   out_2785015820751177915[37] = 0;
   out_2785015820751177915[38] = 0;
   out_2785015820751177915[39] = 0;
   out_2785015820751177915[40] = 0;
   out_2785015820751177915[41] = 0;
   out_2785015820751177915[42] = 0;
   out_2785015820751177915[43] = 0;
   out_2785015820751177915[44] = 0;
   out_2785015820751177915[45] = 0;
   out_2785015820751177915[46] = 0;
   out_2785015820751177915[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2785015820751177915[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2785015820751177915[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2785015820751177915[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2785015820751177915[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2785015820751177915[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2785015820751177915[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2785015820751177915[54] = 0;
   out_2785015820751177915[55] = 0;
   out_2785015820751177915[56] = 0;
   out_2785015820751177915[57] = 0;
   out_2785015820751177915[58] = 0;
   out_2785015820751177915[59] = 0;
   out_2785015820751177915[60] = 0;
   out_2785015820751177915[61] = 0;
   out_2785015820751177915[62] = 0;
   out_2785015820751177915[63] = 0;
   out_2785015820751177915[64] = 0;
   out_2785015820751177915[65] = 0;
}
void h_14(double *state, double *unused, double *out_6295069496057986254) {
   out_6295069496057986254[0] = state[10];
   out_6295069496057986254[1] = state[11];
   out_6295069496057986254[2] = state[12];
}
void H_14(double *state, double *unused, double *out_1390235053130058905) {
   out_1390235053130058905[0] = 0;
   out_1390235053130058905[1] = 0;
   out_1390235053130058905[2] = 0;
   out_1390235053130058905[3] = 0;
   out_1390235053130058905[4] = 0;
   out_1390235053130058905[5] = 0;
   out_1390235053130058905[6] = 0;
   out_1390235053130058905[7] = 0;
   out_1390235053130058905[8] = 0;
   out_1390235053130058905[9] = 0;
   out_1390235053130058905[10] = 1;
   out_1390235053130058905[11] = 0;
   out_1390235053130058905[12] = 0;
   out_1390235053130058905[13] = 0;
   out_1390235053130058905[14] = 0;
   out_1390235053130058905[15] = 0;
   out_1390235053130058905[16] = 0;
   out_1390235053130058905[17] = 0;
   out_1390235053130058905[18] = 0;
   out_1390235053130058905[19] = 0;
   out_1390235053130058905[20] = 0;
   out_1390235053130058905[21] = 0;
   out_1390235053130058905[22] = 0;
   out_1390235053130058905[23] = 0;
   out_1390235053130058905[24] = 0;
   out_1390235053130058905[25] = 0;
   out_1390235053130058905[26] = 0;
   out_1390235053130058905[27] = 0;
   out_1390235053130058905[28] = 0;
   out_1390235053130058905[29] = 0;
   out_1390235053130058905[30] = 0;
   out_1390235053130058905[31] = 0;
   out_1390235053130058905[32] = 0;
   out_1390235053130058905[33] = 1;
   out_1390235053130058905[34] = 0;
   out_1390235053130058905[35] = 0;
   out_1390235053130058905[36] = 0;
   out_1390235053130058905[37] = 0;
   out_1390235053130058905[38] = 0;
   out_1390235053130058905[39] = 0;
   out_1390235053130058905[40] = 0;
   out_1390235053130058905[41] = 0;
   out_1390235053130058905[42] = 0;
   out_1390235053130058905[43] = 0;
   out_1390235053130058905[44] = 0;
   out_1390235053130058905[45] = 0;
   out_1390235053130058905[46] = 0;
   out_1390235053130058905[47] = 0;
   out_1390235053130058905[48] = 0;
   out_1390235053130058905[49] = 0;
   out_1390235053130058905[50] = 0;
   out_1390235053130058905[51] = 0;
   out_1390235053130058905[52] = 0;
   out_1390235053130058905[53] = 0;
   out_1390235053130058905[54] = 0;
   out_1390235053130058905[55] = 0;
   out_1390235053130058905[56] = 1;
   out_1390235053130058905[57] = 0;
   out_1390235053130058905[58] = 0;
   out_1390235053130058905[59] = 0;
   out_1390235053130058905[60] = 0;
   out_1390235053130058905[61] = 0;
   out_1390235053130058905[62] = 0;
   out_1390235053130058905[63] = 0;
   out_1390235053130058905[64] = 0;
   out_1390235053130058905[65] = 0;
}
void h_33(double *state, double *unused, double *out_8335437343872892399) {
   out_8335437343872892399[0] = state[16];
   out_8335437343872892399[1] = state[17];
   out_8335437343872892399[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4885794362251815430) {
   out_4885794362251815430[0] = 0;
   out_4885794362251815430[1] = 0;
   out_4885794362251815430[2] = 0;
   out_4885794362251815430[3] = 0;
   out_4885794362251815430[4] = 0;
   out_4885794362251815430[5] = 0;
   out_4885794362251815430[6] = 0;
   out_4885794362251815430[7] = 0;
   out_4885794362251815430[8] = 0;
   out_4885794362251815430[9] = 0;
   out_4885794362251815430[10] = 0;
   out_4885794362251815430[11] = 0;
   out_4885794362251815430[12] = 0;
   out_4885794362251815430[13] = 0;
   out_4885794362251815430[14] = 0;
   out_4885794362251815430[15] = 0;
   out_4885794362251815430[16] = 1;
   out_4885794362251815430[17] = 0;
   out_4885794362251815430[18] = 0;
   out_4885794362251815430[19] = 0;
   out_4885794362251815430[20] = 0;
   out_4885794362251815430[21] = 0;
   out_4885794362251815430[22] = 0;
   out_4885794362251815430[23] = 0;
   out_4885794362251815430[24] = 0;
   out_4885794362251815430[25] = 0;
   out_4885794362251815430[26] = 0;
   out_4885794362251815430[27] = 0;
   out_4885794362251815430[28] = 0;
   out_4885794362251815430[29] = 0;
   out_4885794362251815430[30] = 0;
   out_4885794362251815430[31] = 0;
   out_4885794362251815430[32] = 0;
   out_4885794362251815430[33] = 0;
   out_4885794362251815430[34] = 0;
   out_4885794362251815430[35] = 0;
   out_4885794362251815430[36] = 0;
   out_4885794362251815430[37] = 0;
   out_4885794362251815430[38] = 0;
   out_4885794362251815430[39] = 1;
   out_4885794362251815430[40] = 0;
   out_4885794362251815430[41] = 0;
   out_4885794362251815430[42] = 0;
   out_4885794362251815430[43] = 0;
   out_4885794362251815430[44] = 0;
   out_4885794362251815430[45] = 0;
   out_4885794362251815430[46] = 0;
   out_4885794362251815430[47] = 0;
   out_4885794362251815430[48] = 0;
   out_4885794362251815430[49] = 0;
   out_4885794362251815430[50] = 0;
   out_4885794362251815430[51] = 0;
   out_4885794362251815430[52] = 0;
   out_4885794362251815430[53] = 0;
   out_4885794362251815430[54] = 0;
   out_4885794362251815430[55] = 0;
   out_4885794362251815430[56] = 0;
   out_4885794362251815430[57] = 0;
   out_4885794362251815430[58] = 0;
   out_4885794362251815430[59] = 0;
   out_4885794362251815430[60] = 0;
   out_4885794362251815430[61] = 0;
   out_4885794362251815430[62] = 1;
   out_4885794362251815430[63] = 0;
   out_4885794362251815430[64] = 0;
   out_4885794362251815430[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8105684203409443664) {
  H(in_vec, out_8105684203409443664);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6009694460892224080) {
  err_fun(nom_x, delta_x, out_6009694460892224080);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_4500169231886375311) {
  inv_err_fun(nom_x, true_x, out_4500169231886375311);
}
void live_H_mod_fun(double *state, double *out_4718470999003226183) {
  H_mod_fun(state, out_4718470999003226183);
}
void live_f_fun(double *state, double dt, double *out_6731141136618477668) {
  f_fun(state,  dt, out_6731141136618477668);
}
void live_F_fun(double *state, double dt, double *out_4629760113683050) {
  F_fun(state,  dt, out_4629760113683050);
}
void live_h_4(double *state, double *unused, double *out_8367410387765199065) {
  h_4(state, unused, out_8367410387765199065);
}
void live_H_4(double *state, double *unused, double *out_8677453988394506375) {
  H_4(state, unused, out_8677453988394506375);
}
void live_h_9(double *state, double *unused, double *out_6295069496057986254) {
  h_9(state, unused, out_6295069496057986254);
}
void live_H_9(double *state, double *unused, double *out_1390235053130058905) {
  H_9(state, unused, out_1390235053130058905);
}
void live_h_10(double *state, double *unused, double *out_807403039949781792) {
  h_10(state, unused, out_807403039949781792);
}
void live_H_10(double *state, double *unused, double *out_5994600925781704636) {
  H_10(state, unused, out_5994600925781704636);
}
void live_h_12(double *state, double *unused, double *out_8835561720881619035) {
  h_12(state, unused, out_8835561720881619035);
}
void live_H_12(double *state, double *unused, double *out_3388031708272312245) {
  H_12(state, unused, out_3388031708272312245);
}
void live_h_35(double *state, double *unused, double *out_3586554408121291898) {
  h_35(state, unused, out_3586554408121291898);
}
void live_H_35(double *state, double *unused, double *out_1735237357612957826) {
  H_35(state, unused, out_1735237357612957826);
}
void live_h_32(double *state, double *unused, double *out_7732761396890248770) {
  h_32(state, unused, out_7732761396890248770);
}
void live_H_32(double *state, double *unused, double *out_8917252905015743547) {
  H_32(state, unused, out_8917252905015743547);
}
void live_h_13(double *state, double *unused, double *out_5154368101625429584) {
  h_13(state, unused, out_5154368101625429584);
}
void live_H_13(double *state, double *unused, double *out_2785015820751177915) {
  H_13(state, unused, out_2785015820751177915);
}
void live_h_14(double *state, double *unused, double *out_6295069496057986254) {
  h_14(state, unused, out_6295069496057986254);
}
void live_H_14(double *state, double *unused, double *out_1390235053130058905) {
  H_14(state, unused, out_1390235053130058905);
}
void live_h_33(double *state, double *unused, double *out_8335437343872892399) {
  h_33(state, unused, out_8335437343872892399);
}
void live_H_33(double *state, double *unused, double *out_4885794362251815430) {
  H_33(state, unused, out_4885794362251815430);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
